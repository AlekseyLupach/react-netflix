{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/a.lupach/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/react-netflix/client/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./list.scss\";\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport ListItem from \"../listItem/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      console.log(slideNumber);\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n\n    if (direction === \"right\" && slideNumber < 2) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          item: index,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick(\"right\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"Iv9XOTedsWAPfmI4OhMVBoYJvBs=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/ITRANSITION.CORP/a.lupach/Рабочий стол/react-netflix/client/src/components/list/List.jsx"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","useRef","useState","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNumber","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","console","log","style","transform","title","display","map","item","index"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SACEA,oBADF,EAEEC,uBAFF,QAGO,oBAHP;AAIA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMQ,OAAO,GAAGT,MAAM,EAAtB;;AAEA,QAAMU,WAAW,GAAIC,SAAD,IAAe;AACjCL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAIJ,SAAS,KAAK,MAAd,IAAwBJ,WAAW,GAAG,CAA1C,EAA6C;AAC3CS,MAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACAC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBK,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAMP,QAAS,KAA/D;AACD;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBJ,WAAW,GAAG,CAA3C,EAA8C;AAC5CC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBK,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOP,QAAS,KAAhE;AACD;AACF,GAZD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,IAAI,CAACgB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,oBAAD;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAMV,WAAW,CAAC,MAAD,CAF5B;AAGE,QAAA,KAAK,EAAE;AAAEW,UAAAA,OAAO,EAAE,CAAChB,OAAD,IAAY;AAAvB;AAHT;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEI,OAAhC;AAAA,kBACGL,IAAI,CAACkB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,KAAhB;AAAuB,UAAA,IAAI,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,uBAAD;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,OAAO,EAAE,MAAMb,WAAW,CAAC,OAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCQP,I;;KAAAA,I;AA0CT,eAAeA,IAAf","sourcesContent":["import \"./list.scss\";\nimport {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport ListItem from \"../listItem/ListItem\";\n\nfunction List({ list }) {\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n\n  const listRef = useRef();\n\n  const handleClick = (direction) => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n    if (direction === \"left\" && slideNumber > 0) {\n      console.log(slideNumber);\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n    if (direction === \"right\" && slideNumber < 2) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n  return (\n    <div className=\"list\">\n      <span className=\"listTitle\">{list.title}</span>\n      <div className=\"wrapper\">\n        <ArrowBackIosOutlined\n          className=\"sliderArrow left\"\n          onClick={() => handleClick(\"left\")}\n          style={{ display: !isMoved && \"none\" }}\n        />\n        <div className=\"container\" ref={listRef}>\n          {list.map((item, index) => (\n            <ListItem item={index} item={item} />\n          ))}\n        </div>\n        <ArrowForwardIosOutlined\n          className=\"sliderArrow right\"\n          onClick={() => handleClick(\"right\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}